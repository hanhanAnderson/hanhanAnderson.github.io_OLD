{"version":3,"sources":["assets/images/logo.svg","assets/images/blue-marker.svg","components/TopBar.js","Constants.js","components/Register.js","components/Login.js","components/Gallery.js","components/CreatePostForm.js","components/CreatePostButton.js","components/AroundMarker.js","components/AroundMap.js","components/Home.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TopBar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","src","logo","alt","props","isLoggedin","href","onClick","handleLogout","es_icon","type","React","Component","API_ROOT","TOKEN_KEY","AUTH_HEADER","GEO_OPTIONS","timeout","maximumAge","POST_KEY","LOC_SHAKE","RegistrationForm","state","confirmDirty","handleSubmit","e","preventDefault","_this","form","validateFieldsAndScroll","err","values","console","log","fetch","concat","method","body","JSON","stringify","username","password","then","response","ok","Error","statusText","message","success","history","push","catch","error","handleConfirmBlur","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","es_form","onSubmit","Item","assign","label","rules","required","input","validator","onBlur","offset","es_button","htmlType","Link","to","Register","Form","create","name","NormalLoginForm","text","handleLogin","prefix","style","color","placeholder","Login","Gallery","_Component","images","map","image","objectSpread","customOverlay","captionStyle","user","caption","wrapperStyle","Gallery_default","backdropClosesModal","enableImageSelection","display","minHeight","width","border","overflow","backgroundColor","maxHeight","position","bottom","padding","fontSize","NormalCreatePostForm","normFile","Array","isArray","fileList","beforeUpload","valuePropName","getValueFromEvent","upload","Dragger","action","CreatePostForm","CreatePostButton","_getPrototypeOf2","_len","length","args","_key","call","ModalText","visible","confirmLoading","showModal","handleOk","_JSON$parse","parse","localStorage","getItem","lat","lon","token","formData","FormData","set","Math","random","originFileObj","headers","Authorization","resetFields","loadNearbyPosts","handleCancel","getFormRef","formInstance","_this$state","modal","title","onOk","okText","onCancel","ref","AroundMarker","isOpen","toggleOpen","prevState","_this$props$post","post","location","url","isImagePost","icon","undefined","blueMarker","scaledSize","window","google","maps","Size","lib","lng","onMouseOver","onMouseOut","controls","NormalAroundMap","reloadMarkers","center","getCenter","radius","getRadius","getMapRef","mapInstance","bounds","getBounds","ne","getNorthEast","right","LatLng","geometry","spherical","computeDistanceBetween","defaultZoom","defaultCenter","onDragEnd","onZoomChanged","posts","AroundMarker_AroundMarker","AroundMap","withScriptjs","withGoogleMap","TabPane","Tabs","RadioGroup","Radio","Group","Home","isLoadingGeoLocation","isLoadingPosts","topic","onSuccessLoadGeoLocation","geolocation","_geolocation$coords","coords","latitude","longitude","setItem","onFailedLoadGeoLocation","_ref","range","json","data","getPanelContent","spin","tip","getImagePosts","getVideoPosts","filter","thumbnail","thumbnailWidth","thumbnailHeight","Gallery_Gallery","row","gutter","col","onTopicChange","loadFacesAroundTheWorld","navigator","getCurrentPosition","operations","CreatePostButton_CreatePostButton","onChange","es_radio","tabs","tabBarExtraContent","tab","isMarkerShown","googleMapURL","loadingElement","height","containerElement","mapElement","Main","getRedirect","Redirect","getLogin","getHome","Home_Home","Switch","Route","exact","path","render","component","App","removeItem","TopBar_TopBar","Main_Main","Boolean","hostname","match","ReactDOM","BrowserRouter","components_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.438fa4aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue-marker.bc8cc4ea.svg\";","import React from 'react';\nimport logo from '../assets/images/logo.svg';\nimport {Icon} from 'antd';\nexport class TopBar extends React.Component {\n    render() {\n        return (\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <div className=\"App-title\"> Around Web</div>\n                {this.props.isLoggedin ?\n                    <a href=\"topbar\"\n                    className = \"logout\"\n                    onClick={this.props.handleLogout}>\n                    <Icon type=\"logout\" />\n                        {' '}Logout\n                </a> : null}\n            </header>\n        );\n    }\n}\n\n","export const API_ROOT = 'https://around-75015.appspot.com/api/v1';\n// export const API_ROOT = 'https://around-206919.appspot.com/api/v1';\nexport const TOKEN_KEY = 'TOKEN_KEY';\nexport const AUTH_HEADER ='Bearer';\nexport const GEO_OPTIONS = {\n    //enableHighAccuracy: true,\n    timeout: 360000,\n    maximumAge: 27000\n};\nexport const POST_KEY = 'POST_KEY';\nexport const POS_KEY = 'POS_KEY';\nexport const LOC_SHAKE = 0.02;","import React from 'react'\nimport {\n    Form, Input,  Button, message\n} from 'antd';\nimport { API_ROOT } from '../Constants';\nimport  {Link} from 'react-router-dom';\n\nclass RegistrationForm extends React.Component {\n    state = {\n        confirmDirty: false,\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                fetch(`${API_ROOT}/signup`, {\n                    method: 'POST',\n                    body: JSON.stringify({\n                         username : values.username,\n                         password : values.password\n                        })\n                }).then((response) => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    throw new Error(response.statusText);\n                })\n                    // .then((response) => response.text()) // response.json()\n                    .then((response) => {\n                        message.success('Registration Succeed!');\n                        this.props.history.push('/login');\n                })       \n                    // console.log(response))\n                    .catch((err) => message.error('Registration Failed!'))\n                    // console.log(err))\n            }\n        });\n    }\n\n    handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    }\n\n    validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    }\n\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 16,\n                    offset: 8,\n                },\n            },\n        };\n\n\n        return (\n            <Form className = 'register' onSubmit={this.handleSubmit}>\n                <Form.Item\n                    {...formItemLayout}\n                    label=\"Username\"\n                >\n                    {getFieldDecorator('username', {\n                        rules: [\n                            {\n                            required: true, message: 'Please input your Username!',\n                            }\n                        ],\n                    })(\n                        <Input />\n                    )}\n                </Form.Item>\n                <Form.Item\n                    {...formItemLayout}\n                    label=\"Password\"\n                >\n                    {getFieldDecorator('password', {\n                        rules: [{\n                            required: true, message: 'Please input your password!',\n                        }, {\n                            validator: this.validateToNextPassword,\n                        }],\n                    })(\n                        <Input type=\"password\" />\n                    )}\n                </Form.Item>\n                <Form.Item\n                    {...formItemLayout}\n                    label=\"Confirm Password\"\n                >\n                    {getFieldDecorator('confirm', {\n                        rules: [{\n                            required: true, message: 'Please confirm your password!',\n                        }, {\n                            validator: this.compareToFirstPassword,\n                        }],\n                    })(\n                        <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n                    )}\n                </Form.Item>\n\n\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n                    <p> I have an account, go back to <Link to=\"/login\">login</Link> </p>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport const Register = Form.create({ name: 'register' })(RegistrationForm);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Form, Icon, Input, Button, message\n} from 'antd';\nimport { API_ROOT } from '../Constants';\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n        console.log('Received values of form: ', values);\n        fetch(`${API_ROOT}/login`, {\n          method: 'POST',\n          body: JSON.stringify({\n            username: values.username,\n            password: values.password\n          })\n        }).then((response) => {\n          if (response.ok) {\n            return response.text();\n          }\n          throw new Error(response.statusText);\n        })\n          // .then((response) => response.text()) // response.json()\n          .then((response) => {\n            message.success('Login Succeed!');\n            // this.props.handleLogin();\n            console.log(response);\n            this.props.handleLogin(response);\n          })\n          .catch((err) => message.error('Login Failed!'))\n      }\n    });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n          )}\n        </Form.Item>\n        <Form.Item>\n\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n            </Button>\n          Or <Link to=\"/register\">register now!</Link>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const Login = Form.create()(NormalLoginForm);","import React, { Component }from 'react';\nimport PropTypes from 'prop-types';\nimport GridGallery from 'react-grid-gallery';\n\nexport class Gallery extends Component {\n static propTypes = {\n   images: PropTypes.arrayOf(\n     PropTypes.shape({\n       user: PropTypes.string.isRequired,\n       src: PropTypes.string.isRequired,\n       thumbnail: PropTypes.string.isRequired,\n       caption: PropTypes.string,\n       thumbnailWidth: PropTypes.number.isRequired,\n       thumbnailHeight: PropTypes.number.isRequired\n     })\n   ).isRequired\n }\n\n render() {\n   const images = this.props.images.map((image) => {\n     return {\n       ...image,\n       customOverlay: (\n         <div style={captionStyle}>\n           <div>{`${image.user}: ${image.caption}`}</div>\n         </div>\n       ),\n     };\n   });\n\n   return (\n     <div style={wrapperStyle}>\n       <GridGallery\n         backdropClosesModal\n         images={images}\n         enableImageSelection={false}/>\n     </div>\n   );\n }\n}\n\n\nconst wrapperStyle = {\n display: \"block\",\n minHeight: \"1px\",\n width: \"100%\",\n border: \"1px solid #ddd\",\n overflow: \"auto\"\n};\n\nconst captionStyle = {\n backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n maxHeight: \"240px\",\n overflow: \"hidden\",\n position: \"absolute\",\n bottom: \"0\",\n width: \"100%\",\n color: \"white\",\n padding: \"2px\",\n fontSize: \"90%\"\n};\n","import React from 'react';\n\nimport {\n    Form, Upload, Icon, Input,\n  } from 'antd';\n\n\n  \n  class NormalCreatePostForm extends React.Component {\n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    }\n  \n    normFile = (e) => {\n      console.log('Upload event:', e);\n      if (Array.isArray(e)) {\n        return e;\n      }\n      return e && e.fileList;\n    }\n  \n    beforeUpload = () => {return false;}\n\n\n    render() {\n      const { getFieldDecorator } = this.props.form;\n      const formItemLayout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 },\n      };\n      return (\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item\n                      {...formItemLayout}\n                      label=\"Message\"\n                      >\n          {getFieldDecorator('message', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input placeholder='Input your message here' />\n          )}\n        </Form.Item>\n          <Form.Item\n            {...formItemLayout}\n            label=\"Image\"\n          >\n            <div className=\"dropbox\">\n              {getFieldDecorator('image', {\n                valuePropName: 'fileList',\n                getValueFromEvent: this.normFile,\n                rules: [{ required: true, message: 'Please select a pic!' }]\n              })(\n                <Upload.Dragger name=\"files\" action=\"/upload.do\" beforeUpload = {this.beforeUpload}>\n                  <p className=\"ant-upload-drag-icon\">\n                    <Icon type=\"inbox\" />\n                  </p>\n                  <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                  <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n                </Upload.Dragger>\n              )}\n            </div>\n          </Form.Item>\n  \n\n        </Form>\n      );\n    }\n  }\n  \n  export const CreatePostForm = Form.create()(NormalCreatePostForm);","import React from 'react';\nimport { Modal, Button, message } from 'antd';\nimport { CreatePostForm } from './CreatePostForm'\nimport { POST_KEY, TOKEN_KEY, API_ROOT, AUTH_HEADER, LOC_SHAKE } from '../Constants'\nexport class CreatePostButton extends React.Component {\n    state = {\n        ModalText: 'Content of the modal',\n        visible: false,\n        confirmLoading: false,\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n\n    handleOk = () => {\n        this.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values);\n                const { lat, lon } = JSON.parse(localStorage.getItem(POST_KEY));\n                const token = localStorage.getItem(TOKEN_KEY);\n\n                let formData = new FormData();\n\n                // formData.set('lat', lat);\n                // formData.set('lon', lon);\n\n                formData.set('lat', lat + LOC_SHAKE * Math.random() * 2 - LOC_SHAKE);\n                formData.set('lon', lon + LOC_SHAKE * Math.random() * 2 - LOC_SHAKE);\n\n                formData.set('message', values.message);\n                formData.set('image', values.image[0].originFileObj);\n\n                this.setState({ confirmLoading: true });\n                fetch(`${API_ROOT}/post`, {\n                    method: 'POST',\n                    body: formData,\n                    headers: {\n                        Authorization: `${AUTH_HEADER} ${token}`,\n                    }\n                })\n                    .then((response) => {\n                        if (response.ok) {\n                            this.form.resetFields();\n                            this.setState({\n                                visible: false,\n                                confirmLoading: false\n                            });\n                            return this.props.loadNearbyPosts();\n                        }\n                        throw new Error(response.statusText);\n                    })\n                    .then(() => message.success('Post created successfully!'))\n                    .catch((e) => {\n                        console.log(e);\n                        this.setState({ confirmLoading: false });\n                        message.error('Failed to create the post.');\n                    });\n            }\n        });\n    }\n\n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    }\n\n    getFormRef = (formInstance) => {\n        console.log(formInstance);\n        this.form = formInstance;\n    }\n    render() {\n        const { visible, confirmLoading } = this.state;\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showModal}>\n                    Create New Post\n        </Button>\n                <Modal\n                    title=\"Create New Post\"\n                    visible={visible}\n                    onOk={this.handleOk}\n                    okText='Create'\n                    confirmLoading={confirmLoading}\n                    onCancel={this.handleCancel}\n                >\n                    <CreatePostForm ref={this.getFormRef} />\n                </Modal>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Marker, InfoWindow } from \"react-google-maps\";\nimport blueMarker from '../assets/images/blue-marker.svg'\n\nexport class AroundMarker extends React.Component {\n    state = {\n        isOpen: false,\n    }\n    toggleOpen = () => {\n        this.setState(\n            prevState => ({\n                isOpen: !prevState.isOpen\n            })\n        )\n    }\n    render() {\n        const { user, location, message, url, type } = this.props.post;\n        const isImagePost = type ===\"image\";\n        const icon = isImagePost ? undefined : {\n            url : blueMarker, \n            scaledSize: new window.google.maps.Size(26, 41),\n        }\n        return (\n            <Marker\n                position={{ lat: location.lat, lng: location.lon }}\n                onMouseOver={isImagePost ? this.toggleOpen : undefined}\n                onMouseOut={isImagePost ? this.toggleOpen : undefined}\n                onClick = {isImagePost ? undefined : this.toggleOpen}\n                icon = {icon}\n            >\n                {\n                    this.state.isOpen ?\n                        (<InfoWindow onClick={this.toggleOpen}>\n                            <div>\n                                {\n                                    type === \"image\" ? (\n                                        <img\n                                            alt={message}\n                                            src={url}\n                                            className='around-marker-image'\n                                        />\n                                        \n                                    ) : (\n                                    <video src = {url} controls className = \"around-marker-video\" />\n                                        )\n                                }\n                                <p>{`${user} : ${message}`}</p>\n                            </div>\n                        </InfoWindow>) : (null)\n                }\n            </Marker>\n        )\n    }\n}\n","import React from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap, } from \"react-google-maps\";\nimport { AroundMarker } from './AroundMarker';\nimport {POST_KEY} from '../Constants'\n\nexport class NormalAroundMap extends React.Component {\n    reloadMarkers =() => {\n        const center = this.getCenter();\n        const radius = this.getRadius();\n        this.props.loadNearbyPosts(\n            center, radius\n        );\n    }\n    getMapRef = (mapInstance) => {\n        this.map = mapInstance;\n    }\n    getCenter = () => {\n        if (!this.map) return;\n        const center = this.map.getCenter();\n        return {\n            lat : center.lat(),\n            lon : center.lng(),\n        }\n    }\n\n    getRadius = () => {\n        const center = this.map.getCenter();\n        const bounds = this.map.getBounds();\n        if (center && bounds) {\n          const ne = bounds.getNorthEast();\n          const right = new window.google.maps.LatLng(center.lat(), ne.lng());\n          return 0.001 * window.google.maps.geometry.spherical.computeDistanceBetween(center, right);\n        }\n      }\n     \n\n    render() {\n        const { lat, lon } = JSON.parse(localStorage.getItem(POST_KEY));\n        return (\n            <GoogleMap\n            defaultZoom={12}\n            defaultCenter={{ lat: lat, lng: lon }}\n            onDragEnd={this.reloadMarkers}\n            onZoomChanged={this.reloadMarkers}\n            ref = {this.getMapRef}\n          >\n                {\n                    this.props.posts &&this.props.posts.length >0 && this.props.posts.map(\n                        post =>  (<AroundMarker post = {post} key = {post.url}/> )\n                    )\n                }\n\n          </GoogleMap>\n        )\n    }\n}\n\nexport const AroundMap = withScriptjs(withGoogleMap(NormalAroundMap));\n\n//AIzaSyCckcZPKvejFZihOIXvYVzZKDiiV01rxbc","import React from 'react';\nimport { Tabs, Spin, Row, Col, Radio } from 'antd';\nimport { API_ROOT, TOKEN_KEY, AUTH_HEADER, GEO_OPTIONS, POST_KEY } from '../Constants';\nimport { Gallery } from './Gallery';\nimport { CreatePostButton } from './CreatePostButton';\nimport { AroundMap } from './AroundMap';\n\nconst TabPane = Tabs.TabPane;\nconst RadioGroup = Radio.Group;\n\nexport class Home extends React.Component {\n    state = {\n        isLoadingGeoLocation: false,\n        isLoadingPosts: false,\n        error: '',\n        post: [],\n        topic : \"around\",\n    }\n    componentDidMount() {\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(\n                this.onSuccessLoadGeoLocation,\n                this.onFailedLoadGeoLocation,\n                GEO_OPTIONS\n            );\n            this.setState({ isLoadingGeoLocation: true });\n        } else {\n            this.setState({ error: 'geolocation IS NOT available' });\n            console.log(\"geolocation IS NOT available\");\n        }\n    }\n    onSuccessLoadGeoLocation = (geolocation) => {\n        console.log(geolocation);\n        const { latitude, longitude } = geolocation.coords;\n        localStorage.setItem(POST_KEY, JSON.stringify({\n            lat: latitude,\n            lon: longitude\n        }));\n        this.setState({ isLoadingGeoLocation: false });\n        this.loadNearbyPosts();\n    }\n    onFailedLoadGeoLocation = () => {\n        this.setState({\n            isLoadingGeoLocation: false,\n            error: 'Failed to Load Geo-Location',\n        });\n    }\n    loadNearbyPosts = (center, radius) => {\n        const { lat, lon } = center ||  JSON.parse(localStorage.getItem(POST_KEY));\n        const range = radius || 2000;\n        \n        const token = localStorage.getItem(TOKEN_KEY);\n        // fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=20000`, {\n        //     method: 'GET',\n        //     headers: {\n        //         Authorization: `${AUTH_HEADER} ${token}`\n        //     }\n        // })\n        //     .then((response) => {\n        //         if (response.ok) {\n        //             return response.json();\n        //         }\n        //         throw new Error(response.statusText);\n        //     })\n        //     .then(\n        //         data => {\n        //             console.log(data);\n        //             this.setState({ isLoadingPosts: false, posts: data ? data : [] });               \n        //     })\n        //     .catch(\n        //         (error) => { this.setState({ \n        //             isLoadingPosts: false,\n        //             error: error.message \n        //         }) }\n        //     );\n        this.setState({ isLoadingPosts: true });\n        fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=${range}`, {\n            method: 'GET',\n            headers: {\n                Authorization: `${AUTH_HEADER} ${token}`,\n            },\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error('Failed to load posts.');\n        }).then((data) => {\n            console.log(data);\n            this.setState({ posts: data ? data : [], isLoadingPosts: false });\n        }).catch((e) => {\n            console.log(e.message);\n            this.setState({ isLoadingPosts: false, error: e.message });\n        });\n    }\n\n    getPanelContent = (type) => {\n        const { error, isLoadingGeoLocation, isLoadingPosts } = this.state;\n        if (error) {\n            return <div>{error}</div>\n        } else if (isLoadingGeoLocation) {\n            return <Spin tip=\"Loading geo location...\" />\n        } else if (isLoadingPosts) {\n            return <Spin tip=\"Loading posts...\" />\n        } else if (this.state.posts && this.state.posts.length > 0) {\n            return type ===\"image\" ? this.getImagePosts() : this.getVideoPosts() ;\n        } else {\n            return 'No nearby posts.';\n        }\n    }\n\n    getImagePosts = () => {\n        const images = this.state.posts\n        .filter((post) => (post.type === 'image') )\n        .map((post) => {\n            return {\n                user: post.user,\n                src: post.url,\n                thumbnail: post.url,\n                caption: post.message,\n                thumbnailWidth: 400,\n                thumbnailHeight: 300,\n            }\n        });\n        return (<Gallery images={images} />);\n    }\n    getVideoPosts = () => {\n\n        return (\n            <Row gutter ={32}>\n                    {this.state.posts.filter(post => post.type === \"video\")\n                    .map(post =>( <Col span = {6} key = {post.url}> \n                        <video src = {post.url} controls className = \"video-block\"/>\n                        <p>{`${post.user}: ${post.message}`} </p>\n                        </Col>))\n                    }\n                \n            </Row>\n        )\n    }\n    onTopicChange = (e) =>{\n        const topic = e.target.value;\n        this.setState({\n            topic\n        })\n        if(topic === 'face') {\n            this.loadFacesAroundTheWorld();\n        } else {\n            this.loadNearbyPosts();\n        }\n    }\n    loadFacesAroundTheWorld = () => {\n        this.setState({ isLoadingPosts: true });\n        const token = localStorage.getItem(TOKEN_KEY);\n        fetch(`${API_ROOT}/cluster?term=face`, {\n            method: 'GET',\n            headers: {\n                Authorization: `${AUTH_HEADER} ${token}`,\n            },\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error('Failed to load posts.');\n        }).then((data) => {\n            console.log(data);\n            this.setState({ posts: data ? data : [], isLoadingPosts: false });\n        }).catch((e) => {\n            console.log(e.message);\n            this.setState({ isLoadingPosts: false, error: e.message });\n        });\n    }\n    render() {\n        console.log('state', this.state);\n        const operations = <CreatePostButton loadNearbyPosts={this.loadNearbyPosts} />;\n        return (\n        <div>\n            <RadioGroup onChange={this.onTopicChange} value = {this.state.topic}>\n                <Radio value =\"around\"> Post Around Me\n                </Radio>\n                <Radio value =\"face\"> Faces Around the World\n                </Radio>\n            </RadioGroup>\n            <Tabs className=\"main-tabs\" tabBarExtraContent={operations}>\n                <TabPane tab=\"Image Posts\" key=\"1\">\n                    {this.getPanelContent(\"image\")}\n                </TabPane>\n                <TabPane tab=\"Video Posts\" key=\"2\">\n                    {this.getPanelContent(\"video\")}\n                </TabPane>\n                <TabPane tab=\"Map\" key=\"3\">\n                    <AroundMap \n                          isMarkerShown\n                          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCckcZPKvejFZihOIXvYVzZKDiiV01rxbc&v=3.exp&libraries=geometry,drawing,places\"\n                          loadingElement={<div style={{ height: `100%` }} />}\n                          containerElement={<div style={{ height: `600px` }} />}\n                          mapElement={<div style={{ height: `100%` }} />}\n                          posts = {this.state.posts}\n                          loadNearbyPosts = {this.loadNearbyPosts}\n                    />\n                </TabPane>\n            </Tabs>\n        </div>\n        )\n    }\n}","import React from 'react';\nimport { Register } from './Register'\nimport { Login } from './Login';\nimport { Home } from './Home';\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nexport class Main extends React.Component {\n    getRedirect = () => {\n        return (this.props.isLoggedin ?\n             <Redirect to=\"#/home\" /> : <Redirect to=\"#/login\" />\n        )\n    }\n    getLogin = () => {\n        return this.props.isLoggedin ? <Redirect to= \"#/home\" /> :\n        <Login handleLogin={this.props.handleLogin} />\n    }\n    getHome = () => {\n        return this.props.isLoggedin ? <Home /> : <Redirect to=\"#/login\" />\n    }\n    render() {\n        return (\n            <div className='main'>\n                <Switch>\n                    <Route exact path=\"/\" render={this.getRedirect} />\n                    <Route path=\"/login\" component={this.getLogin} />\n                    <Route path=\"/register\" component={Register} />\n                    <Route path=\"/home\" render={this.getHome} />\n                    <Route render={this.getRedirect} />\n                </Switch>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { TopBar } from './TopBar';\nimport { Main } from './Main';\nimport { TOKEN_KEY } from '../Constants'\nimport '../styles/App.css';\n\n\nclass App extends Component {\n  state = {\n    isLoggedin: !!localStorage.getItem(TOKEN_KEY)\n  }\n  handleLogin = (data) => {\n    localStorage.setItem(TOKEN_KEY, data);\n    this.setState({\n      isLoggedin: true\n    });\n  }\n  handleLogout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    this.setState({\n      isLoggedin: false\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar\n          isLoggedin={this.state.isLoggedin}\n          handleLogout={this.handleLogout}\n        />\n        <Main\n          isLoggedin={this.state.isLoggedin}\n          handleLogin={this.handleLogin}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}