<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[连接远程JupyterNotebook]]></title>
    <url>%2FMachineLearning%2F%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8BJupyterNotebook%2F</url>
    <content type="text"><![CDATA[连接远程JupyterNotebook实验室搞了个新的server有四个RTX2080Ti 当然要来玩玩啦设置好用户之后就可以ssh连接了 装好anaconda pytorch 远程连接jupyter notebook网址还是localhost 但是带了token, 403. 解决方法首先在server上（ssh里）执行1jupyter notebook --no-browser --port=8889 然后本地1ssh -N -f -L localhost:8888:localhost:8889 remote_user@remote_host 映射server的8889到本地的8888打开本地的 http://localhost:8888/ 就可以啦 如果没有设置jupyter notebook的密码 会被要求输入token 就是之前网址里的就可以啦 如果此时还是403 可能是防火墙设置问题 换个端口到1234试试~1ssh username@address_of_remote -L127.0.0.1:1234:127.0.0.1:8888]]></content>
      <categories>
        <category>MachineLearning</category>
      </categories>
      <tags>
        <tag>MachineLearning</tag>
        <tag>Pytorch</tag>
        <tag>Tips</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Pytorch速成笔记 I]]></title>
    <url>%2FMachineLearning%2FPytorch%E9%80%9F%E6%88%90%E7%AC%94%E8%AE%B0-I%2F</url>
    <content type="text"><![CDATA[Pytorch速成笔记 I开个新坑 用来整理之前pytorch的笔记和相关notebook]]></content>
      <categories>
        <category>MachineLearning</category>
      </categories>
      <tags>
        <tag>MachineLearning</tag>
        <tag>Pytorch</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Root Android emulator and Install Xposed Framework in 2019]]></title>
    <url>%2FAndroid%2FAndroid%2F</url>
    <content type="text"><![CDATA[Root Android emulator and Install Xposed Framework in 2019利用Xposed模组修改隐私信息一个月之前接到通知要去一个会。。本来以为是去玩，结果是要带着demo去展示。。很难受 意思就是要一个月之内（还是毕业前夕）做出来吧。。【做一个苦逼的安卓开发仔 基本想法假设有辣鸡app想读取你的地理位置、短信啥的，利用xposed在他读取这些信息的api调用之前hook住， 然后返回一个fake data就可以起到保护隐私信息的效果了，想法肥肠简单 最终实现实现了一个带UI基于Xpose的d Framework修改/随机 位置短信通讯录的demo app (为了demo后期ML based privacy protection project) 项目地址带demo的项目地址 测试程序为了测试是否能修改地理位置信息和短信， 先整一个可以读取位置和SMS的sample app 大概就是会在屏幕里的textview里显示当前的经纬度位置提供来源更新时间啥的 123456789101112131415161718192021222324252627282930313233343536373839404142@Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); //获取显示地理位置信息的TextView testView = (TextView) findViewById(R.id.textView); //获取地理位置管理器 locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE); //获取所有可用的位置提供器 List&lt;String&gt; providers = locationManager.getProviders(true); if (providers.contains(LocationManager.GPS_PROVIDER)) &#123; //如果是GPS locationProvider = LocationManager.GPS_PROVIDER; &#125; else if (providers.contains(LocationManager.NETWORK_PROVIDER)) &#123; //如果是Network locationProvider = LocationManager.NETWORK_PROVIDER; &#125; else &#123; Toast.makeText(this, "没有可用的位置提供器", Toast.LENGTH_SHORT).show(); return; &#125; //获取Location if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) &#123; // TODO: Consider calling // ActivityCompat#requestPermissions // Android5.0以后要check有没有给app permission // 没有的话在这里handle一下 return; &#125; location = locationManager.getLastKnownLocation(locationProvider); if(location!=null)&#123; showLocation(location); &#125; //指定3秒一定更新位置信息 locationManager.requestLocationUpdates(locationProvider, 3000, 1, locationListener); &#125; private void showLocation(Location location)&#123; String locationStr = "Lat：" + location.getLatitude() +"\n" + "Lon：" + location.getLongitude() + "\n" +"Time" + location.getTime(); testView.setText(locationStr); //更新到textview里 &#125; Root Android Emulator谁又能想到2019年了还有人折腾这玩意呢？？ Xposed安装需要root权限， 反正我是没有安卓机，只好先考虑root一下模拟器了 Quick ANSWER： 请用Nox模拟器！一共用了3种模拟器 折腾了挺久的。。 Android Studio自带的emulator： 之前写app用的image都是Android image都是distribut version，虽说Android是开源的，但是distributed其实是不给你瞎搞和root的，adb都拿不到root shell 估计是没戏，需要用debug version 但是上面又没有谷歌服务，安装起来也非常麻烦，折腾了一会果断放弃 GenyMotion Android Emulator： 其实很好用，把zip update卡刷包直接拖进去就能达到卡刷效果，把superUser的卡刷包刷进去之后就有superSU的app了， 实测获得最高权限，速度非常快，有很多官方和客制的image供选择，Mac版本需要一个Genymotion-ARM-Translation，具体不解释了，xposed安装也非常快，但是就是无法安装其中的模组，换了很多Android版本都不能启用，原因不明。。。总之如果不搞xposed单纯用模拟器的话GenyMotion还是非常好用的【可用注册账号使用免费版 Nox夜神模拟器 ，自带root开关，Mac上的版本是4.0 不能安装自定义版本的Android，直接跳过。Windows版本上的Android 版本是5.1.1 实测可用。【需要忍受广告推送 Xposed Module 编写有了root过的android emulator， 安装xposed就非常简单了，具体就不介绍了，直接来写xpoesd模块新建一个XposedInit.java 1234567891011121314151617181920212223242526272829303132333435363738public class XposedInit implements IXposedHookLoadPackage&#123; String packageName = "com.xxx.showlocation"; String className = "com.xxx.showlocation.MainActivity"; @Override public void handleLoadPackage(XC_LoadPackage.LoadPackageParam lpparam) throws Throwable &#123; Log.d("Xdbug:::::","handleLoadPackage"); Log.d("Xdbug:::::::CLAZZZZZZ","$CLAZZ"); XposedHelpers.findAndHookMethod(className, lpparam.classLoader, "getLat",Location.class ,new XC_MethodHook() &#123; @Override protected void beforeHookedMethod(MethodHookParam param) throws Throwable &#123; super.beforeHookedMethod(param); Log.d("Xdbug::B4HookLat::",param.toString()); &#125; @Override protected void afterHookedMethod(MethodHookParam param) throws Throwable &#123; Object temp = param.getResult(); Log.d("Xdbug:AfHookLAT:temp::",temp.toString()); param.setResult((double) 0.0); &#125; &#125;); XposedHelpers.findAndHookMethod(className, lpparam.classLoader, "getLon",Location.class, new XC_MethodHook() &#123; @Override protected void beforeHookedMethod(MethodHookParam param) throws Throwable &#123; super.beforeHookedMethod(param); Log.d("Xdbug::param::",param.toString()); &#125; @Override protected void afterHookedMethod(MethodHookParam param) throws Throwable &#123; Object temp = param.getResult(); Log.d("Xdbug:LON:temp::",temp.toString()); param.setResult((double) 0.0); &#125; &#125;); Log.d("Xdbug",lpparam.packageName); &#125; 启用插件重启后可以看到经纬度都变成了0， 主要修改功能逻辑实现，接下来就是完善功能和增加UI了 UI设计基本考虑的功能就是 打开/关闭 再加几个选择（随机、偏移啥的）还可以在此基础上增加一个输入框达到指定模拟位置的功能。。 总结经验&amp;坑赶了一个星期好歹是搞出来了。。参考了很多前人的项目，尤其是要感谢coder-pig和rovo89的项目，让我能一个星期速成简单的xposed开发和复习android开发。。（还有一些参考的大佬。。3个月过后再填blog的坑已经不太记得了。。 遇到的坑： 对于需要频繁重启又要root的项目直接上真机测试吧。。 SharedPreference是个好东西， 可以达到类似前段local storage的效果实现 临时保存， 进app读取上次退出数据的效果 xposed读其他程序的SharedPreference非常好用 -之后想起来啥再写吧]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Privacy</tag>
        <tag>Xposed</tag>
        <tag>security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2FPersonal%2Fhello-world%2F</url>
    <content type="text"><![CDATA[碎碎念开始。。First Blog本来之前是有个WordPress博客的 但是后来张朝权跑路了 服务器就没了 反正本来也都是碎碎念 想想自己以后还要继续PhD 最近糟心的事也挺多的 就恢复博客以后写点日常和辣鸡技术总结吧 ### 1fmt.println("hello, world!")]]></content>
      <categories>
        <category>Personal</category>
      </categories>
      <tags>
        <tag>Hello</tag>
        <tag>World</tag>
      </tags>
  </entry>
</search>
